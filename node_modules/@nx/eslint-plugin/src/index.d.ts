declare const configs: {
    typescript: {
        parser: string;
        parserOptions: {
            ecmaVersion: number;
            sourceType: string;
            tsconfigRootDir: string;
        };
        plugins: string[];
        extends: string[];
        rules: {
            '@typescript-eslint/explicit-member-accessibility': string;
            '@typescript-eslint/explicit-module-boundary-types': string;
            '@typescript-eslint/explicit-function-return-type': string;
            '@typescript-eslint/no-parameter-properties': string;
            '@typescript-eslint/no-non-null-assertion': string;
            '@typescript-eslint/adjacent-overload-signatures': string;
            '@typescript-eslint/prefer-namespace-keyword': string;
            'no-empty-function': string;
            '@typescript-eslint/no-empty-function': string;
            '@typescript-eslint/no-inferrable-types': string;
            '@typescript-eslint/no-unused-vars': string;
            '@typescript-eslint/no-empty-interface': string;
            '@typescript-eslint/no-explicit-any': string;
            '@typescript-eslint/no-require-imports': string;
        };
    };
    javascript: {
        env: {
            browser: boolean;
            node: boolean;
        };
        parser: string;
        parserOptions: {
            ecmaVersion: number;
            sourceType: string;
        };
        plugins: string[];
        extends: string[];
        rules: {
            '@typescript-eslint/explicit-member-accessibility': string;
            '@typescript-eslint/explicit-module-boundary-types': string;
            '@typescript-eslint/explicit-function-return-type': string;
            '@typescript-eslint/no-parameter-properties': string;
            '@typescript-eslint/no-var-requires': string;
            '@typescript-eslint/no-non-null-assertion': string;
            '@typescript-eslint/adjacent-overload-signatures': string;
            '@typescript-eslint/prefer-namespace-keyword': string;
            'no-empty-function': string;
            '@typescript-eslint/no-empty-function': string;
            '@typescript-eslint/no-inferrable-types': string;
            '@typescript-eslint/no-unused-vars': string;
            '@typescript-eslint/no-empty-interface': string;
            '@typescript-eslint/no-explicit-any': string;
            '@typescript-eslint/no-require-imports': string;
        };
    };
    react: {
        extends: string[];
    };
    'react-base': {
        plugins: string[];
        env: {
            browser: boolean;
            commonjs: boolean;
            es6: boolean;
            jest: boolean;
            node: boolean;
        };
        rules: {
            'array-callback-return': string;
            'dot-location': string[];
            eqeqeq: string[];
            'new-parens': string;
            'no-caller': string;
            'no-cond-assign': string[];
            'no-const-assign': string;
            'no-control-regex': string;
            'no-delete-var': string;
            'no-dupe-args': string;
            'no-dupe-keys': string;
            'no-duplicate-case': string;
            'no-empty-character-class': string;
            'no-empty-pattern': string;
            'no-eval': string;
            'no-ex-assign': string;
            'no-extend-native': string;
            'no-extra-bind': string;
            'no-extra-label': string;
            'no-fallthrough': string;
            'no-func-assign': string;
            'no-implied-eval': string;
            'no-invalid-regexp': string;
            'no-iterator': string;
            'no-label-var': string;
            'no-labels': (string | {
                allowLoop: boolean;
                allowSwitch: boolean;
            })[];
            'no-lone-blocks': string;
            'no-loop-func': string;
            'no-mixed-operators': (string | {
                groups: string[][];
                allowSamePrecedence: boolean;
            })[];
            'no-multi-str': string;
            'no-native-reassign': string;
            'no-negated-in-lhs': string;
            'no-new-func': string;
            'no-new-object': string;
            'no-new-symbol': string;
            'no-new-wrappers': string;
            'no-obj-calls': string;
            'no-octal': string;
            'no-octal-escape': string;
            'no-redeclare': string;
            'no-regex-spaces': string;
            'no-restricted-syntax': string[];
            'no-script-url': string;
            'no-self-assign': string;
            'no-self-compare': string;
            'no-sequences': string;
            'no-shadow-restricted-names': string;
            'no-sparse-arrays': string;
            'no-template-curly-in-string': string;
            'no-this-before-super': string;
            'no-throw-literal': string;
            'no-restricted-globals': string[];
            'no-unexpected-multiline': string;
            'no-unreachable': string;
            'no-unused-expressions': string;
            'no-unused-labels': string;
            'no-useless-computed-key': string;
            'no-useless-concat': string;
            'no-useless-escape': string;
            'no-useless-rename': (string | {
                ignoreDestructuring: boolean;
                ignoreImport: boolean;
                ignoreExport: boolean;
            })[];
            'no-with': string;
            'no-whitespace-before-property': string;
            'require-yield': string;
            'rest-spread-spacing': string[];
            strict: string[];
            'unicode-bom': string[];
            'use-isnan': string;
            'valid-typeof': string;
            'no-restricted-properties': (string | {
                object: string;
                property: string;
                message: string;
            })[];
            'getter-return': string;
            'import/first': string;
            'import/no-amd': string;
            'import/no-webpack-loader-syntax': string;
        };
    };
    'react-typescript': {
        rules: {
            'default-case': string;
            'no-dupe-class-members': string;
            'no-undef': string;
            'no-array-constructor': string;
            '@typescript-eslint/no-array-constructor': string;
            '@typescript-eslint/no-namespace': string;
            'no-use-before-define': string;
            '@typescript-eslint/no-use-before-define': (string | {
                functions: boolean;
                classes: boolean;
                variables: boolean;
                typedefs: boolean;
            })[];
            'no-unused-vars': string;
            '@typescript-eslint/no-unused-vars': (string | {
                args: string;
                ignoreRestSiblings: boolean;
            })[];
            'no-useless-constructor': string;
            '@typescript-eslint/no-useless-constructor': string;
            '@typescript-eslint/no-unused-expressions': (string | {
                allowShortCircuit: boolean;
                allowTernary: boolean;
                allowTaggedTemplates: boolean;
            })[];
        };
    };
    'react-jsx': {
        settings: {
            react: {
                version: string;
            };
        };
        plugins: string[];
        extends: string[];
        rules: {
            'react/forbid-foreign-prop-types': (string | {
                allowInPropTypes: boolean;
            })[];
            'react/jsx-no-comment-textnodes': string;
            'react/jsx-no-duplicate-props': string;
            'react/jsx-no-target-blank': string;
            'react/jsx-no-undef': string;
            'react/jsx-pascal-case': (string | {
                allowAllCaps: boolean;
                ignore: any[];
            })[];
            'react/jsx-uses-vars': string;
            'react/no-danger-with-children': string;
            'react/no-direct-mutation-state': string;
            'react/no-is-mounted': string;
            'react/no-typos': string;
            'react/jsx-uses-react': string;
            'react/react-in-jsx-scope': string;
            'react/require-render-return': string;
            'react/style-prop-object': string;
            'react/jsx-no-useless-fragment': string;
            'jsx-a11y/accessible-emoji': string;
            'jsx-a11y/alt-text': string;
            'jsx-a11y/anchor-has-content': string;
            'jsx-a11y/anchor-is-valid': (string | {
                aspects: string[];
            })[];
            'jsx-a11y/aria-activedescendant-has-tabindex': string;
            'jsx-a11y/aria-props': string;
            'jsx-a11y/aria-proptypes': string;
            'jsx-a11y/aria-role': string;
            'jsx-a11y/aria-unsupported-elements': string;
            'jsx-a11y/heading-has-content': string;
            'jsx-a11y/iframe-has-title': string;
            'jsx-a11y/img-redundant-alt': string;
            'jsx-a11y/no-access-key': string;
            'jsx-a11y/no-distracting-elements': string;
            'jsx-a11y/no-redundant-roles': string;
            'jsx-a11y/role-has-required-aria-props': string;
            'jsx-a11y/role-supports-aria-props': string;
            'jsx-a11y/scope': string;
        };
    };
    angular: {
        env: {
            browser: boolean;
            es6: boolean;
            node: boolean;
        };
        plugins: string[];
        extends: string[];
        parserOptions: {
            project: any[];
        };
        rules: {};
    };
    'angular-template': {
        plugins: string[];
        extends: string[];
        rules: {};
    };
    'flat/base': {
        plugins: {
            readonly "@nx": any;
        };
        ignores: string[];
    }[];
    readonly "flat/typescript": typeof import("./flat-configs/typescript").default;
    readonly "flat/javascript": typeof import("./flat-configs/javascript").default;
    readonly "flat/react": typeof import("./flat-configs/react-tmp").default;
    readonly "flat/react-base": typeof import("./flat-configs/react-base").default;
    readonly "flat/react-typescript": typeof import("./flat-configs/react-typescript").default;
    readonly "flat/react-jsx": typeof import("./flat-configs/react-jsx").default;
    readonly "flat/angular": typeof import("./flat-configs/angular").default;
    readonly "flat/angular-template": typeof import("./flat-configs/angular-template").default;
};
declare const rules: {
    "enforce-module-boundaries": import("@typescript-eslint/utils/ts-eslint").RuleModule<import("./rules/enforce-module-boundaries").MessageIds, import("./rules/enforce-module-boundaries").Options, unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
    "nx-plugin-checks": import("@typescript-eslint/utils/ts-eslint").RuleModule<import("./rules/nx-plugin-checks").MessageIds, import("./rules/nx-plugin-checks").Options, unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
    "dependency-checks": import("@typescript-eslint/utils/ts-eslint").RuleModule<import("./rules/dependency-checks").MessageIds, import("./rules/dependency-checks").Options, unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
};
declare const _default: {
    configs: {
        typescript: {
            parser: string;
            parserOptions: {
                ecmaVersion: number;
                sourceType: string;
                tsconfigRootDir: string;
            };
            plugins: string[];
            extends: string[];
            rules: {
                '@typescript-eslint/explicit-member-accessibility': string;
                '@typescript-eslint/explicit-module-boundary-types': string;
                '@typescript-eslint/explicit-function-return-type': string;
                '@typescript-eslint/no-parameter-properties': string;
                '@typescript-eslint/no-non-null-assertion': string;
                '@typescript-eslint/adjacent-overload-signatures': string;
                '@typescript-eslint/prefer-namespace-keyword': string;
                'no-empty-function': string;
                '@typescript-eslint/no-empty-function': string;
                '@typescript-eslint/no-inferrable-types': string;
                '@typescript-eslint/no-unused-vars': string;
                '@typescript-eslint/no-empty-interface': string;
                '@typescript-eslint/no-explicit-any': string;
                '@typescript-eslint/no-require-imports': string;
            };
        };
        javascript: {
            env: {
                browser: boolean;
                node: boolean;
            };
            parser: string;
            parserOptions: {
                ecmaVersion: number;
                sourceType: string;
            };
            plugins: string[];
            extends: string[];
            rules: {
                '@typescript-eslint/explicit-member-accessibility': string;
                '@typescript-eslint/explicit-module-boundary-types': string;
                '@typescript-eslint/explicit-function-return-type': string;
                '@typescript-eslint/no-parameter-properties': string;
                '@typescript-eslint/no-var-requires': string;
                '@typescript-eslint/no-non-null-assertion': string;
                '@typescript-eslint/adjacent-overload-signatures': string;
                '@typescript-eslint/prefer-namespace-keyword': string;
                'no-empty-function': string;
                '@typescript-eslint/no-empty-function': string;
                '@typescript-eslint/no-inferrable-types': string;
                '@typescript-eslint/no-unused-vars': string;
                '@typescript-eslint/no-empty-interface': string;
                '@typescript-eslint/no-explicit-any': string;
                '@typescript-eslint/no-require-imports': string;
            };
        };
        react: {
            extends: string[];
        };
        'react-base': {
            plugins: string[];
            env: {
                browser: boolean;
                commonjs: boolean;
                es6: boolean;
                jest: boolean;
                node: boolean;
            };
            rules: {
                'array-callback-return': string;
                'dot-location': string[];
                eqeqeq: string[];
                'new-parens': string;
                'no-caller': string;
                'no-cond-assign': string[];
                'no-const-assign': string;
                'no-control-regex': string;
                'no-delete-var': string;
                'no-dupe-args': string;
                'no-dupe-keys': string;
                'no-duplicate-case': string;
                'no-empty-character-class': string;
                'no-empty-pattern': string;
                'no-eval': string;
                'no-ex-assign': string;
                'no-extend-native': string;
                'no-extra-bind': string;
                'no-extra-label': string;
                'no-fallthrough': string;
                'no-func-assign': string;
                'no-implied-eval': string;
                'no-invalid-regexp': string;
                'no-iterator': string;
                'no-label-var': string;
                'no-labels': (string | {
                    allowLoop: boolean;
                    allowSwitch: boolean;
                })[];
                'no-lone-blocks': string;
                'no-loop-func': string;
                'no-mixed-operators': (string | {
                    groups: string[][];
                    allowSamePrecedence: boolean;
                })[];
                'no-multi-str': string;
                'no-native-reassign': string;
                'no-negated-in-lhs': string;
                'no-new-func': string;
                'no-new-object': string;
                'no-new-symbol': string;
                'no-new-wrappers': string;
                'no-obj-calls': string;
                'no-octal': string;
                'no-octal-escape': string;
                'no-redeclare': string;
                'no-regex-spaces': string;
                'no-restricted-syntax': string[];
                'no-script-url': string;
                'no-self-assign': string;
                'no-self-compare': string;
                'no-sequences': string;
                'no-shadow-restricted-names': string;
                'no-sparse-arrays': string;
                'no-template-curly-in-string': string;
                'no-this-before-super': string;
                'no-throw-literal': string;
                'no-restricted-globals': string[];
                'no-unexpected-multiline': string;
                'no-unreachable': string;
                'no-unused-expressions': string;
                'no-unused-labels': string;
                'no-useless-computed-key': string;
                'no-useless-concat': string;
                'no-useless-escape': string;
                'no-useless-rename': (string | {
                    ignoreDestructuring: boolean;
                    ignoreImport: boolean;
                    ignoreExport: boolean;
                })[];
                'no-with': string;
                'no-whitespace-before-property': string;
                'require-yield': string;
                'rest-spread-spacing': string[];
                strict: string[];
                'unicode-bom': string[];
                'use-isnan': string;
                'valid-typeof': string;
                'no-restricted-properties': (string | {
                    object: string;
                    property: string;
                    message: string;
                })[];
                'getter-return': string;
                'import/first': string;
                'import/no-amd': string;
                'import/no-webpack-loader-syntax': string;
            };
        };
        'react-typescript': {
            rules: {
                'default-case': string;
                'no-dupe-class-members': string;
                'no-undef': string;
                'no-array-constructor': string;
                '@typescript-eslint/no-array-constructor': string;
                '@typescript-eslint/no-namespace': string;
                'no-use-before-define': string;
                '@typescript-eslint/no-use-before-define': (string | {
                    functions: boolean;
                    classes: boolean;
                    variables: boolean;
                    typedefs: boolean;
                })[];
                'no-unused-vars': string;
                '@typescript-eslint/no-unused-vars': (string | {
                    args: string;
                    ignoreRestSiblings: boolean;
                })[];
                'no-useless-constructor': string;
                '@typescript-eslint/no-useless-constructor': string;
                '@typescript-eslint/no-unused-expressions': (string | {
                    allowShortCircuit: boolean;
                    allowTernary: boolean;
                    allowTaggedTemplates: boolean;
                })[];
            };
        };
        'react-jsx': {
            settings: {
                react: {
                    version: string;
                };
            };
            plugins: string[];
            extends: string[];
            rules: {
                'react/forbid-foreign-prop-types': (string | {
                    allowInPropTypes: boolean;
                })[];
                'react/jsx-no-comment-textnodes': string;
                'react/jsx-no-duplicate-props': string;
                'react/jsx-no-target-blank': string;
                'react/jsx-no-undef': string;
                'react/jsx-pascal-case': (string | {
                    allowAllCaps: boolean;
                    ignore: any[];
                })[];
                'react/jsx-uses-vars': string;
                'react/no-danger-with-children': string;
                'react/no-direct-mutation-state': string;
                'react/no-is-mounted': string;
                'react/no-typos': string;
                'react/jsx-uses-react': string;
                'react/react-in-jsx-scope': string;
                'react/require-render-return': string;
                'react/style-prop-object': string;
                'react/jsx-no-useless-fragment': string;
                'jsx-a11y/accessible-emoji': string;
                'jsx-a11y/alt-text': string;
                'jsx-a11y/anchor-has-content': string;
                'jsx-a11y/anchor-is-valid': (string | {
                    aspects: string[];
                })[];
                'jsx-a11y/aria-activedescendant-has-tabindex': string;
                'jsx-a11y/aria-props': string;
                'jsx-a11y/aria-proptypes': string;
                'jsx-a11y/aria-role': string;
                'jsx-a11y/aria-unsupported-elements': string;
                'jsx-a11y/heading-has-content': string;
                'jsx-a11y/iframe-has-title': string;
                'jsx-a11y/img-redundant-alt': string;
                'jsx-a11y/no-access-key': string;
                'jsx-a11y/no-distracting-elements': string;
                'jsx-a11y/no-redundant-roles': string;
                'jsx-a11y/role-has-required-aria-props': string;
                'jsx-a11y/role-supports-aria-props': string;
                'jsx-a11y/scope': string;
            };
        };
        angular: {
            env: {
                browser: boolean;
                es6: boolean;
                node: boolean;
            };
            plugins: string[];
            extends: string[];
            parserOptions: {
                project: any[];
            };
            rules: {};
        };
        'angular-template': {
            plugins: string[];
            extends: string[];
            rules: {};
        };
        'flat/base': {
            plugins: {
                readonly "@nx": any;
            };
            ignores: string[];
        }[];
        readonly "flat/typescript": typeof import("./flat-configs/typescript").default;
        readonly "flat/javascript": typeof import("./flat-configs/javascript").default;
        readonly "flat/react": typeof import("./flat-configs/react-tmp").default;
        readonly "flat/react-base": typeof import("./flat-configs/react-base").default;
        readonly "flat/react-typescript": typeof import("./flat-configs/react-typescript").default;
        readonly "flat/react-jsx": typeof import("./flat-configs/react-jsx").default;
        readonly "flat/angular": typeof import("./flat-configs/angular").default;
        readonly "flat/angular-template": typeof import("./flat-configs/angular-template").default;
    };
    rules: {
        "enforce-module-boundaries": import("@typescript-eslint/utils/ts-eslint").RuleModule<import("./rules/enforce-module-boundaries").MessageIds, import("./rules/enforce-module-boundaries").Options, unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
        "nx-plugin-checks": import("@typescript-eslint/utils/ts-eslint").RuleModule<import("./rules/nx-plugin-checks").MessageIds, import("./rules/nx-plugin-checks").Options, unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
        "dependency-checks": import("@typescript-eslint/utils/ts-eslint").RuleModule<import("./rules/dependency-checks").MessageIds, import("./rules/dependency-checks").Options, unknown, import("@typescript-eslint/utils/ts-eslint").RuleListener>;
    };
};
export default _default;
export { configs, rules };
